---
- name: Get data from Nautobot
  networktocode.nautobot.query_graphql:
    url: "{{ nb_url }}"
    token: "{{ nb_token }}"
    validate_certs: false
    query: |
      {
        devices (device_type: ["ceos","iol"]) {
          name
          primary_ip4 {
            address
          }
          device_type{
            model
            manufacturer {
            name
          }
            }
          platform {
            name
          }
          software_version {
            version
          }
          interfaces {
            name
            mgmt_only
            ip_addresses {
              address
            }
            connected_interface {
              name
              device {
                name
              }
            }
          }
        }
      }
  register: "nb_devices"
  

- name: Create initial Configs for each device
  template:
    src: "initial_configs.j2"
    dest: "~/github-projects/Nautobot-Workshop/clabs/startup-configs/{{ item.name }}.txt"
  loop: "{{ nb_devices.data.devices }}"
  when: item.device_type.model == 'ceos'

- name: Render Containerlab topology
  template:
    src: "containerlab_topology.j2"
    dest: "~/github-projects/Nautobot-Workshop/clabs/nautobot-workshop-topology.clab.yml"

- name: Copy startup configs to remote server via scp
  ansible.builtin.shell: |
    scp -r ~/github-projects/Nautobot-Workshop/clabs/startup-configs ubuntu@192.168.17.4:/home/ubuntu/labs/
  delegate_to: localhost
  run_once: true

- name: Copy topology file to remote server via scp
  ansible.builtin.shell: |
    scp ~/github-projects/Nautobot-Workshop/clabs/nautobot-workshop-topology.clab.yml ubuntu@192.168.17.4:/home/ubuntu/labs/nautobot-workshop-topology.clab.yml
  delegate_to: localhost
  run_once: true